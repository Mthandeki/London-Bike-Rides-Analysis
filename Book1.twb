<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
        <calculation class='tableau' formula='&quot;day&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='25'>
        <calculation class='tableau' formula='25' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (london_bikes_final)' inline='true' name='federated.0ct10lr0qwdcx01422056100olcc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes_final' name='excel-direct.128iwrq1n8d8ql16z17h70whmbv0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Documents/Data Analysis Projects/Project 1London Bikes/london_bikes_final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.128iwrq1n8d8ql16z17h70whmbv0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.128iwrq1n8d8ql16z17h70whmbv0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_real_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_real_C]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>temp_real_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_feels_like_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_feels_like_C]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>temp_feels_like_C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity_percent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>humidity_percent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_668503085021310976]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
      </column>
      <column caption='Min Month' datatype='date' name='[Calculation_910290090083319808]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='{ MIN(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
      </column>
      <column caption='In Range' datatype='boolean' name='[Calculation_910290090086879234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_668503085021310976] &gt;= [Calculation_910290090083319808]&#13;&#10;AND &#13;&#10;[Calculation_668503085021310976]&lt;= [Min Month (copy)_910290090084155393]' />
      </column>
      <column caption='In Range Rides' datatype='integer' name='[Calculation_910290090098941955]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{SUM(INT([Calculation_910290090086879234])*[count]) }' />
      </column>
      <column caption='Max Month' datatype='date' name='[Min Month (copy)_910290090084155393]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='{ MAX(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
      </column>
      <column aggregation='None' caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2F01B183BF924CA9BE8B7188F45E948A]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Humidity Percent' datatype='real' name='[humidity_percent]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
      </column>
      <column caption='temp feels like C' datatype='real' name='[temp_feels_like_C]' role='measure' type='quantitative' />
      <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_910290090086879234]' derivation='Attribute' name='[attr:Calculation_910290090086879234:nk]' pivot='key' type='nominal' />
      <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_668503085021310976]' derivation='None' name='[none:Calculation_668503085021310976:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:ok]' pivot='key' type='ordinal' />
      <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
      <group caption='Action (Moving Average Period,Min Month,Max Month)' hidden='true' name='[Action (Moving Average Period,Min Month,Max Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_668503085021310976:ok]' />
          <groupfilter function='level-members' level='[none:Calculation_910290090083319808:ok]' />
          <groupfilter function='level-members' level='[none:Min Month (copy)_910290090084155393:ok]' />
        </groupfilter>
      </group>
      <group caption='Moving Average Period Set' name='[Moving Average Period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='#2015-05-06#' function='range' level='[none:Calculation_668503085021310976:ok]' to='#2015-10-24#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Tooltip (Min Month,Max Month,Wind kph,Temp C)' hidden='true' name='[Tooltip (Min Month,Max Month,Wind kph,Temp C)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_910290090083319808:ok]' />
          <groupfilter function='level-members' level='[none:Min Month (copy)_910290090084155393:ok]' />
          <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
          <groupfilter function='level-members' level='[temp real C (bin)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving Average Period,Min Month,Max Month)' hidden='true' name='[Tooltip (Moving Average Period,Min Month,Max Month)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_668503085021310976:ok]' />
          <groupfilter function='level-members' level='[none:Calculation_910290090083319808:ok]' />
          <groupfilter function='level-members' level='[none:Min Month (copy)_910290090084155393:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.904545' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0954545' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Calculation_910290090086879234:nk]' type='palette'>
            <map to='#0a611b'>
              <bucket>true</bucket>
            </map>
            <map to='#7741ff'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:time:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:weather:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Broken clouds&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowfall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cloudy&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Scattered clouds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;South Africa&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='25'>
          <calculation class='tableau' formula='25' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2F01B183BF924CA9BE8B7188F45E948A'>
            <properties context=''>
              <relation connection='excel-direct.128iwrq1n8d8ql16z17h70whmbv0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='temp_real_C' ordinal='3' />
                  <column datatype='real' name='temp_feels_like_C' ordinal='4' />
                  <column datatype='real' name='humidity_percent' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action2_4FD918618D854B57BCFB84879DFBC0C2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Moving Averages' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <edit-group-action caption='Update Moving Average Period Set' name='[Action1_F49A70D0F34E4B3181348BAF2676F085]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Moving Averages' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.0ct10lr0qwdcx01422056100olcc].[Moving Average Period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Heat Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b'>Temperature and wind speed </run>
            <run bold='true' fontcolor='#0a611b' fontsize='10'><![CDATA[between <[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]> and <[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (london_bikes_final)' name='federated.0ct10lr0qwdcx01422056100olcc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ct10lr0qwdcx01422056100olcc'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_668503085021310976]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_910290090083319808]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MIN(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_910290090086879234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_668503085021310976] &gt;= [Calculation_910290090083319808]&#13;&#10;AND &#13;&#10;[Calculation_668503085021310976]&lt;= [Min Month (copy)_910290090084155393]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_910290090084155393]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MAX(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column aggregation='None' caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_668503085021310976]' derivation='None' name='[none:Calculation_668503085021310976:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_910290090086879234]' derivation='None' name='[none:Calculation_910290090086879234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[temp real C (bin)]' derivation='None' name='[none:temp real C (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[Action (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_4FD918618D854B57BCFB84879DFBC0C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_668503085021310976:ok]' />
              <groupfilter function='level-members' level='[none:Calculation_910290090083319808:ok]' />
              <groupfilter function='level-members' level='[none:Min Month (copy)_910290090084155393:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]'>
            <groupfilter function='member' level='[none:Calculation_910290090086879234:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]</column>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[Action (Moving Average Period,Min Month,Max Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0ct10lr0qwdcx01422056100olcc].[none:temp real C (bin):ok]' value='39' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ct10lr0qwdcx01422056100olcc].[none:temp real C (bin):ok]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ct10lr0qwdcx01422056100olcc].[none:temp real C (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0ct10lr0qwdcx01422056100olcc].[none:Wind Speed Kph (bin):ok]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5dce4</color>
                <color>#d9c9d8</color>
                <color>#cdb6cc</color>
                <color>#c2a4c0</color>
                <color>#b693b4</color>
                <color>#aa83a8</color>
                <color>#9f749c</color>
                <color>#936690</color>
                <color>#875984</color>
                <color>#7c4d79</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#e8edda' />
            <format attr='stroke-color' id='refline4' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]' />
              <text column='[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Temp C:	<[federated.0ct10lr0qwdcx01422056100olcc].[none:temp real C (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Wind kph:	<[federated.0ct10lr0qwdcx01422056100olcc].[none:Wind Speed Kph (bin):ok]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Time" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ct10lr0qwdcx01422056100olcc].[none:temp real C (bin):ok]</rows>
        <cols>[federated.0ct10lr0qwdcx01422056100olcc].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0ct10lr0qwdcx01422056100olcc].[Wind Speed Kph (bin)]</column>
          <column>[federated.0ct10lr0qwdcx01422056100olcc].[temp real C (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{0EEA6BCC-0834-4922-81CC-520C5E644687}' />
    </worksheet>
    <worksheet name='Moving Averages'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b'>&lt;</run>
            <run bold='true' fontcolor='#0a611b'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontcolor='#0a611b'>&gt; &lt;</run>
            <run bold='true' fontcolor='#0a611b'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#0a611b'>&gt; moving average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (london_bikes_final)' name='federated.0ct10lr0qwdcx01422056100olcc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
            <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='25'>
              <calculation class='tableau' formula='25' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ct10lr0qwdcx01422056100olcc'>
            <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_668503085021310976]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_910290090083319808]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MIN(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_910290090086879234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_668503085021310976] &gt;= [Calculation_910290090083319808]&#13;&#10;AND &#13;&#10;[Calculation_668503085021310976]&lt;= [Min Month (copy)_910290090084155393]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_910290090084155393]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MAX(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column-instance column='[Calculation_910290090086879234]' derivation='Attribute' name='[attr:Calculation_910290090086879234:nk]' pivot='key' type='nominal' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_668503085021310976]' derivation='None' name='[none:Calculation_668503085021310976:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_668503085021310976]' derivation='None' name='[none:Calculation_668503085021310976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' included-values='all' />
          <slices>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#e8edda' />
            <format attr='stroke-color' id='refline4' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ct10lr0qwdcx01422056100olcc].[attr:Calculation_910290090086879234:nk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='automatic' paired-id='refline1' scope='per-pane' symmetric='false' value-column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='automatic' paired-id='refline0' scope='per-pane' symmetric='false' value-column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' z-order='2' />
            <reference-line axis-column='[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='automatic' paired-id='refline3' scope='per-pane' symmetric='false' value-column='[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]' z-order='3' />
            <reference-line axis-column='[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='automatic' paired-id='refline2' scope='per-pane' symmetric='false' value-column='[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]' z-order='4' />
            <reference-line axis-column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' enable-instant-analytics='false' formula='min' id='refline4' label-type='none' paired-id='refline5' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]' z-order='5' />
            <reference-line axis-column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' enable-instant-analytics='false' formula='max' id='refline5' label-type='none' paired-id='refline4' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]' z-order='6' />
            <reference-line axis-column='[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='automatic' paired-id='refline7' scope='per-table' symmetric='false' value-column='[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]' z-order='7' />
            <reference-line axis-column='[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='automatic' paired-id='refline6' scope='per-table' symmetric='false' value-column='[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]' z-order='8' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Date:	<[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Moving Average Rides:	<[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Time" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ct10lr0qwdcx01422056100olcc].[usr:Calculation1:qk]</rows>
        <cols>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]</cols>
      </table>
      <simple-id uuid='{F1A3F0E5-368E-4453-8316-C1508C0858DE}' />
    </worksheet>
    <worksheet name='Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (london_bikes_final)' name='federated.0ct10lr0qwdcx01422056100olcc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ct10lr0qwdcx01422056100olcc'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_668503085021310976]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_910290090083319808]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MIN(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_910290090086879234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_668503085021310976] &gt;= [Calculation_910290090083319808]&#13;&#10;AND &#13;&#10;[Calculation_668503085021310976]&lt;= [Min Month (copy)_910290090084155393]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_910290090084155393]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MAX(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column aggregation='None' caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_668503085021310976]' derivation='None' name='[none:Calculation_668503085021310976:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_910290090086879234]' derivation='None' name='[none:Calculation_910290090086879234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[Tooltip (Min Month,Max Month,Wind kph,Temp C)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Time]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_910290090083319808:ok]' />
              <groupfilter function='level-members' level='[none:Min Month (copy)_910290090084155393:ok]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Time]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_668503085021310976:ok]' />
              <groupfilter function='level-members' level='[none:Calculation_910290090083319808:ok]' />
              <groupfilter function='level-members' level='[none:Min Month (copy)_910290090084155393:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]'>
            <groupfilter function='member' level='[none:Calculation_910290090086879234:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]</column>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[Tooltip (Min Month,Max Month,Wind kph,Temp C)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#e8edda' />
            <format attr='stroke-color' id='refline4' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ct10lr0qwdcx01422056100olcc].[hr:time:ok]' />
              <text column='[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ct10lr0qwdcx01422056100olcc].[hr:time:ok]</rows>
        <cols>[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{2F492C1B-DF64-4734-9367-CC6E03CE478A}' />
    </worksheet>
    <worksheet name='Total Bike Rides'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b'>London bike rides </run>
            <run>Æ&#10;</run>
            <run fontcolor='#0a611b' fontsize='12'><![CDATA[between <[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]> and <[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (london_bikes_final)' name='federated.0ct10lr0qwdcx01422056100olcc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ct10lr0qwdcx01422056100olcc'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_668503085021310976]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_910290090083319808]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MIN(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_910290090086879234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_668503085021310976] &gt;= [Calculation_910290090083319808]&#13;&#10;AND &#13;&#10;[Calculation_668503085021310976]&lt;= [Min Month (copy)_910290090084155393]' />
            </column>
            <column caption='In Range Rides' datatype='integer' name='[Calculation_910290090098941955]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{SUM(INT([Calculation_910290090086879234])*[count]) }' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_910290090084155393]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MAX(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_668503085021310976]' derivation='None' name='[none:Calculation_668503085021310976:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_910290090086879234]' derivation='None' name='[none:Calculation_910290090086879234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_910290090098941955]' derivation='Sum' name='[sum:Calculation_910290090098941955:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[Action (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_4FD918618D854B57BCFB84879DFBC0C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_668503085021310976:ok]' />
              <groupfilter function='level-members' level='[none:Calculation_910290090083319808:ok]' />
              <groupfilter function='level-members' level='[none:Min Month (copy)_910290090084155393:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]'>
            <groupfilter function='member' level='[none:Calculation_910290090086879234:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]</column>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[Action (Moving Average Period,Min Month,Max Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#e8edda' />
            <format attr='stroke-color' id='refline4' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ct10lr0qwdcx01422056100olcc].[sum:Calculation_910290090098941955:qk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#0a611b' fontsize='36'>&lt;</run>
                <run bold='true' fontcolor='#0a611b' fontsize='36'>[federated.0ct10lr0qwdcx01422056100olcc].[sum:Calculation_910290090098941955:qk]</run>
                <run bold='true' fontcolor='#0a611b' fontsize='36'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{06FA1D8C-A632-4AF3-9E0C-E1ABBA1E8919}' />
    </worksheet>
    <worksheet name='Weather'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weather &#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (london_bikes_final)' name='federated.0ct10lr0qwdcx01422056100olcc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ct10lr0qwdcx01422056100olcc'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_668503085021310976]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_910290090083319808]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MIN(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_910290090086879234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_668503085021310976] &gt;= [Calculation_910290090083319808]&#13;&#10;AND &#13;&#10;[Calculation_668503085021310976]&lt;= [Min Month (copy)_910290090084155393]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_910290090084155393]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ MAX(IF  [Moving Average Period Set] THEN [Calculation_668503085021310976] END) }' />
            </column>
            <column aggregation='None' caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_668503085021310976]' derivation='None' name='[none:Calculation_668503085021310976:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_910290090083319808]' derivation='None' name='[none:Calculation_910290090083319808:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_910290090086879234]' derivation='None' name='[none:Calculation_910290090086879234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_910290090084155393]' derivation='None' name='[none:Min Month (copy)_910290090084155393:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[Tooltip (Min Month,Max Month,Wind kph,Temp C)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_910290090083319808:ok]' />
              <groupfilter function='level-members' level='[none:Min Month (copy)_910290090084155393:ok]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_668503085021310976:ok]' />
              <groupfilter function='level-members' level='[none:Calculation_910290090083319808:ok]' />
              <groupfilter function='level-members' level='[none:Min Month (copy)_910290090084155393:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]'>
            <groupfilter function='member' level='[none:Calculation_910290090086879234:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ct10lr0qwdcx01422056100olcc].[none:weather:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]</column>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.0ct10lr0qwdcx01422056100olcc].[Tooltip (Min Month,Max Month,Wind kph,Temp C)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='fill-color' id='refline4' value='#e8edda' />
            <format attr='stroke-color' id='refline4' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ct10lr0qwdcx01422056100olcc].[none:weather:nk]' />
              <text column='[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]' />
              <lod column='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ct10lr0qwdcx01422056100olcc].[none:weather:nk]</rows>
        <cols>[federated.0ct10lr0qwdcx01422056100olcc].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{45D64C19-20D0-43E2-9C15-2C79222489D5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#00000000' />
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#0a611b' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sheet1 (london_bikes_final)' name='federated.0ct10lr0qwdcx01422056100olcc' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <members>
            <member value='&quot;day&quot;' />
            <member value='&quot;week&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='25'>
          <calculation class='tableau' formula='25' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0ct10lr0qwdcx01422056100olcc'>
        <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_668503085021310976]' role='dimension' type='quantitative'>
          <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
        </column>
        <column-instance column='[Calculation_668503085021310976]' derivation='None' name='[none:Calculation_668503085021310976:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='19' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='16' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='12' type-v2='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='43125' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                    <zone h='43125' id='6' type-v2='layout-basic' w='98400' x='800' y='1000'>
                      <zone h='43125' id='3' name='Total Bike Rides' w='25500' x='800' y='1000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                          <format attr='padding' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='43125' id='5' name='Moving Averages' w='72900' x='26300' y='1000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                          <format attr='padding' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='54875' id='11' name='Heat Map' w='98400' x='800' y='44125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5500' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13100' x='53000' y='1500' />
        <zone h='5500' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='14600' x='66600' y='1125' />
        <zone h='4250' id='17' type-v2='text' w='16400' x='56300' y='8625'>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b'>Drag and hold to select time </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#0a611b'>period on timeline</run>
          </formatted-text>
        </zone>
        <zone h='8625' id='20' name='Moving Averages' param='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' type-v2='filter' values='database' w='16800' x='81700' y='1250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='21' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='43125' id='3' is-fixed='true' name='Total Bike Rides' w='25500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='20' name='Moving Averages' param='[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]' type-v2='filter' values='database' w='16800' x='81700' y='1250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43125' id='5' is-fixed='true' name='Moving Averages' w='72900' x='26300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='14600' x='66600' y='1125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13100' x='53000' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4250' id='17' type-v2='text' w='16400' x='56300' y='8625'>
                  <formatted-text>
                    <run bold='true' fontcolor='#0a611b'>Drag and hold to select time </run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#0a611b'>period on timeline</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54875' id='11' is-fixed='true' name='Heat Map' w='98400' x='800' y='44125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{59E24ABB-42FE-4F83-87F8-A6892D099168}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Moving Averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='103'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[attr:Calculation_910290090086879234:nk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_668503085021310976:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:count:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[tyr:Calculation_668503085021310976:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16A8C652-D926-4202-957D-D1A538E55F6F}' />
    </window>
    <window class='worksheet' name='Total Bike Rides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67352378-96A2-4E2B-8071-24F70BFBA21D}' />
    </window>
    <window class='worksheet' name='Heat Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Wind Speed Kph (bin):ok]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:temp real C (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12C8AF68-4E62-4BB7-804B-A820D2E64806}' />
    </window>
    <window class='worksheet' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:weather:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63E04F6F-8B81-445C-9170-923F75279CB1}' />
    </window>
    <window class='worksheet' name='Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ct10lr0qwdcx01422056100olcc].[hr:time:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[hr:time:ok]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090083319808:qk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Calculation_910290090086879234:nk]</field>
            <field>[federated.0ct10lr0qwdcx01422056100olcc].[none:Min Month (copy)_910290090084155393:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{355CF105-DFC5-4C59-A448-5F1A73368249}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Heat Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Moving Averages'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Bike Rides'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{ACC45FFA-A065-4A74-A245-32E8F9803FF2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Heat Map' width='192'>
      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
      LZGp0Sn+Dw+UUCTyk7IUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Moving Averages' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Time' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='70' name='Total Bike Rides' width='192'>
      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
      wqiRFEDCqPkvQ2HQFrbzc9kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Weather' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
